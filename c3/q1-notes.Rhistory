install.packages("xlsx")
library("xlsx")
install.packages("rJava")
library("rJava")
c = read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
head(c)
va = c[VAL]
va = c[c$VAL >= 1000000]
va = c[c$VAL]
va = c$VAL
va
va = c[c$VAL > 23]
va = c[c$VAL > 23,]
va
lenght(va)
length(va)
va = c$VAL
va = c[c$VAL > 23,]
va
head(va,1)
length(va)
install.packages("xlconnet")
install.packages("xlconect")
install.packages("xlconnect")
install.packages("XLConnect")
library("XLConnect")
install.packages("XLConnectJars")
library("XLConnect")
library("XLConnect")
head(va,1)
library("rJava")
library("rJava")
library("XLConnect")
c = read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
colnames(c)
c[$VAL,]
c[c$VAL,]
str(c)
va = c[c$VAL = 23,]
va = c[c$VAL == 23,]
summary(va)
x <- data.frame(va$VAL)
x
good = complete.cases((va$VAL))
f = x[good,]
f
length(f)
va = c[c$VAL = 24,]
va = c[c$VAL == 24,]
x <- data.frame(va$VAL)
good = complete.cases((va$VAL))
f = x[good,]
length(f)
xlData <- read.xlsx("./c3/ngap.xlsx", sheetIndex=1, colIndex=7:15,rowIndex=18:23)
library("xlsx")
xlData <- read.xlsx("./c3/ngap.xlsx", sheetIndex=1, colIndex=7:15,rowIndex=18:23)
getwd()
setwd("~/Work/datasciencecoursera")
xlData <- read.xlsx("./c3/ngap.xlsx", sheetIndex=1, colIndex=7:15,rowIndex=18:23)
dat <- read.xlsx("./c3/ngap.xlsx", sheetIndex=1, colIndex=7:15,rowIndex=18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
csv = read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
file <- tmpfile
file <- tmpfile()
file <- tempfile()
write.table(DT, file=file, row.names=FALSE, col.names = TRUE, sep"\t", quote=FALSE)
write.table(DT, file=file, row.names=FALSE, col.names = TRUE, sep="\t", quote=FALSE)
write.table(csv, file=file, row.names=FALSE, col.names = TRUE, sep="\t", quote=FALSE)
system.time(fread(file))
library("fread")
fread()
data.table::fread(file)
system.time(data.table::fread(file))
DT = csv
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean({DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15}))
system.time(mean({DT[DT$SEX==1,]$pwgtp15)
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
mean(DT$pwgtp15,by=DT$SEX)
proc.time(mean(DT$pwgtp15,by=DT$SEX))
library(microbenchmark)
install.packages('microbenchmark')
mean(DT$pwgtp15,by=DT$SEX)
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
library(microbenchmark)
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
microbenchmark(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
microbenchmark(mean(DT[DT$SEX==1,]$pwgtp15) mean(DT[DT$SEX==2,]$pwgtp15))
microbenchmark(mean(DT[DT$SEX==1,]$pwgtp15))
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
microbenchmark(tapply(DT$pwgtp15,DT$SEX,mean))
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
microbenchmark(mean(DT[DT$SEX==1,]$pwgtp15))
microbenchmark(mean(DT$pwgtp15,by=DT$SEX))
length(f)
sum(dat$Zip*dat$Ext,na.rm=T)
savehistory("~/Work/datasciencecoursera/c3/q1-notes.Rhistory")
